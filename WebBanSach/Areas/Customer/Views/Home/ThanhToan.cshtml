@model Media.Models.Checkout

@{
    ViewData["Title"] = "One Step Checkout";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn-uicons.flaticon.com/uicons-regular-straight/css/uicons-regular-straight.css">
    <title>Thanh toán</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: #e8e8e8;
            color: #333;
        }

        .checkout-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .section-title {
            font-size: 16px;
            font-weight: bold;
            text-transform: uppercase;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #e0e0e0;
        }

        .section {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #555;
        }

        .form-control {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
            transition: border-color 0.3s;
        }

        .form-control:focus {
            outline: none;
            border-color: #2196f3;
        }

        .form-control.input-validation-error {
            border-color: #f44336;
        }

        .text-danger {
            color: #f44336;
            font-size: 12px;
            margin-top: 5px;
            display: block;
        }

        .shipping-method {
            border: 2px solid #f44336;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
        }

        .shipping-method input[type="radio"] {
            margin-right: 10px;
        }

        .shipping-method .method-info {
            flex: 1;
        }

        .shipping-method .method-price {
            font-weight: bold;
            color: #f44336;
        }

        .shipping-method .method-note {
            font-size: 12px;
            color: #666;
            margin-top: 5px;
        }

        .product-item {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 20px;
            border-bottom: 1px solid #e0e0e0;
        }

        .product-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 4px;
            margin-right: 15px;
        }

        .product-info {
            width: 100%;
            display: flex;
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            gap: 20px;
        }

        .product-name {
            width: 70%;
            font-size: 14px;
            margin-bottom: 5px;
        }

        .product-price {
            font-weight: bold;
            color: #f44336;
        }

        .product-quantity {
            display: inline-block;
            padding: 2px 8px;
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-left: 10px;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 12px;
            font-size: 14px;
        }

        .summary-row.total {
            font-size: 18px;
            font-weight: bold;
            color: #f44336;
        }

        .btn-submit {
            width: 100%;
            padding: 15px;
            background-color: #f44336;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            text-transform: uppercase;
            transition: background-color 0.3s;
        }

        .btn-submit:hover {
            background-color: #d32f2f;
        }

        .terms-checkbox {
            display: flex;
            align-items: flex-start;
            margin: 20px 0;
        }

        .terms-checkbox input[type="checkbox"] {
            margin-right: 10px;
            margin-top: 3px;
        }

        .invoice-link {
            color: #2196f3;
            text-decoration: none;
        }

        .invoice-link:hover {
            text-decoration: underline;
        }

        .invoice-note {
            color: #f44336;
            font-size: 13px;
            margin-top: 5px;
        }

        .grid-2col {
            display: flex;
            flex-direction: column;
            gap: 30px;
            padding: 0 50px;
        }

        .quantity-column {
            width: 140px;
            display: flex;
            justify-content: center;
        }

        .quantity-control {
            display: flex;
            border: 1px solid #d5d5d5;
            border-radius: 4px;
        }

        .qty-btn {
            width: 32px;
            height: 32px;
            border: none;
            background: white;
            cursor: pointer;
            font-size: 16px;
            color: #333;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background-color 0.2s;
        }

        .qty-btn:hover {
            background-color: #f5f5f5;
        }

        .qty-input {
            width: 45px;
            height: 32px;
            border: none;
            border-left: 1px solid #d5d5d5;
            border-right: 1px solid #d5d5d5;
            text-align: center;
            background: white;
        }

        .qty-input:focus {
            outline: none;
        }

        .delete-btn {
            border: none;
            background: white;
            cursor: pointer;
            font-size: 18px;
            transition: color 0.2s;
        }

        .delete-btn i {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .delete-btn:hover {
            color: #d32f2f;
        }
    </style>
</head>
<body class="montserrat-regular">
    <div class="checkout-container">

        @using (Html.BeginForm("ThanhToan", "Home", FormMethod.Post, new { @class = "checkout-form" }))
        {
            @Html.AntiForgeryToken()

            <div class="grid-2col">
                <div class="section">
                    <h2 class="section-title">Địa Chỉ Giao Hàng</h2>

                    <div class="form-group">
                        @Html.LabelFor(m => m.FullName)
                        @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", placeholder = "Nguyễn Việt Tiến" })
                        @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.PhoneNumber)
                        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "0896899703" })
                        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group dropdown-wrapper">
                        @Html.LabelFor(m => m.Country)
                        @Html.DropDownListFor(m => m.Country, Model.Countries, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Country, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Province)
                        @Html.DropDownListFor(m => m.Province, Model.Provinces, new { @class = "form-control", id = "provinceSelect" })
                        @Html.ValidationMessageFor(m => m.Province, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.District)
                        @Html.DropDownListFor(m => m.District, Model.Districts, new { @class = "form-control", id = "districtSelect" })
                        @Html.ValidationMessageFor(m => m.District, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Ward)
                        @Html.DropDownListFor(m => m.Ward, Model.Wards, new { @class = "form-control", id = "wardSelect" })
                        @Html.ValidationMessageFor(m => m.Ward, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Address)
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control", placeholder = "Nhập địa chỉ nhận hàng" })
                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Phương thức vận chuyển -->
                <div class="section">
                    <h2 class="section-title">Phương Thức Vận Chuyển</h2>
                    <div class="shipping-method">
                        <input type="radio" name="shippingMethod" value="standard" checked />
                        <div class="method-info">
                            <div><strong>Giao hàng tiêu chuẩn: @Model.ShippingFee.ToString("N0") đ</strong></div>
                            <div class="method-note">Dự kiến giao: Thứ Năm - 30/10</div>
                        </div>
                    </div>
                </div>

                <!-- Kiểm tra lại đơn hàng -->
                <div class="section">
                    <h2 class="section-title">Kiểm Tra Lại Đơn Hàng</h2>
                    <div class="product-item">
                        <img src="@Model.ProductImage" alt="@Model.ProductName" class="product-image" />
                        <div class="product-info">
                            <span class="product-name">@Model.ProductName</span>
                            <span class="product-price">@Model.SubTotal.ToString("N0") đ</span>
                            <div class="quantity-column">
                                <div class="quantity-control">
                                    <button class="qty-btn">−</button>
                                    <input type="text" class="qty-input" value="1" readonly />
                                    <button class="qty-btn">+</button>
                                </div>
                            </div>
                            <button class="delete-btn"><i class="fi fi-rs-trash"></i></button>
                        </div>
                    </div>
                    <div class="order-summary">
                        <div class="summary-row">
                            <span>Thành tiền</span>
                            <span>@Model.SubTotal.ToString("N0") đ</span>
                        </div>
                        <div class="summary-row">
                            <span>Phí vận chuyển (Giao hàng tiêu chuẩn)</span>
                            <span>@Model.ShippingFee.ToString("N0") đ</span>
                        </div>
                        <div class="summary-row total">
                            <span>Tổng Số Tiền (gồm VAT)</span>
                            <span>@Model.Total.ToString("N0") đ</span>
                        </div>

                        <div class="terms-checkbox">
                            <input type="checkbox" id="termsCheckbox" required />
                            <label for="termsCheckbox">
                                Bằng việc tiến hành Mua hàng, Bạn đã đồng ý với
                                <a href="#" class="invoice-link">Điều khoản & Điều kiện của Fahasa.com</a>
                            </label>
                        </div>

                        <button type="submit" class="btn-submit">Xác nhận thanh toán</button>
                    </div>
                </div>
            </div>
        }
    </div>
    <script>
        $(document).ready(function () {
            // Cascading dropdown cho Tỉnh -> Huyện -> Xã
            $('#provinceSelect').change(function () {
                var provinceCode = $(this).val();
                if (provinceCode) {
                    $.getJSON('@Url.Action("GetDistricts", "Home")', { provinceCode: provinceCode }, function (data) {
                        var districtSelect = $('#districtSelect');
                        districtSelect.empty().append('<option value="">Chọn quận/huyện</option>');
                        $.each(data, function (index, item) {
                            districtSelect.append($('<option></option>').val(item.value).html(item.text));
                        });
                        $('#wardSelect').empty().append('<option value="">Chọn phường/xã</option>');
                    });
                }
            });

            $('#districtSelect').change(function () {
                var districtCode = $(this).val();
                if (districtCode) {
                    $.getJSON('@Url.Action("GetWards", "Home")', { districtCode: districtCode }, function (data) {
                        var wardSelect = $('#wardSelect');
                        wardSelect.empty().append('<option value="">Chọn phường/xã</option>');
                        $.each(data, function (index, item) {
                            wardSelect.append($('<option></option>').val(item.value).html(item.text));
                        });
                    });
                }
            });

            // Load tỉnh/thành khi trang mở
            // $.getJSON('@Url.Action("GetProvinces", "Home")', { countryId: 'VN' }, function (data) {
            //     var provinceSelect = $('#provinceSelect');
            //     provinceSelect.empty().append('<option value="">Chọn tỉnh/thành Phố</option>');
            //     $.each(data, function (index, item) {
            //         provinceSelect.append($('<option></option>').val(item.value).html(item.text));
            //     });
            // });
        });
    </script>
</body>
</html>